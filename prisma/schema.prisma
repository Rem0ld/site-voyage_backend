datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  ADMIN
  USER
}

model User {
  id            Int            @id @default(autoincrement())
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  email         String         @unique
  username      String
  country       String?
  zip           String?
  city          String?
  role          Role           @default(USER)
  notifications Notification[]
  travel        Travel[]
  review        Review[]
  picture       Picture[]
}

model Notification {
  id                   Int      @id @default(autoincrement())
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  dateSendNotification DateTime
  userId               Int
  user                 User?    @relation(fields: userId, references: id)
  travelId             Int      @unique
}

model Travel {
  id            Int       @id @default(autoincrement())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  destination   String
  country       Country   @relation(fields: destination, references: name)
  fromCountry   String?
  departureDate DateTime?
  returnDate    DateTime?
  userId        Int?
  user          User?     @relation(fields: [userId], references: id)
  done          Boolean   @default(false)
}

model Picture {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      Int
  user        User?    @relation(fields: userId, references: id)
  countryId   Int
  country     Country? @relation(fields: countryId, references: id)
  url         String
  description String
}

model Review {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  comment     String   @db.VarChar(255)
  score       Int?     @db.SmallInt
  userId      Int?
  user        User?    @relation(fields: userId, references: id)
  countryName String
  country     Country  @relation(fields: countryName, references: name)

  @@index([userId], name: "user_id")
}

model Country {
  id             Int       @id @default(autoincrement())
  numericCode    String    @unique
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  picture        Picture[]
  review         Review[]
  travel         Travel[]
  name           String    @unique
  capital        String?
  topLevelDomain String[]
  alpha2Code     String?
  alpha3Code     String?
  callingCodes   String[]
  altSpellings   String[]
  region         String?
  subregion      String?
  population     Int?
  latlng         Float[]
  demonym        String?
  area           Float?
  gini           Float?
  timezones      String[]
  borders        String[]
  nativeName     String?
  currencies     Json[]
  languages      Json[]
  translations   Json[]
  flag           String?
  regionalBlocs  Json[]
  cioc           String?
}
